# enviroment
enviroment.profile=production

# postgreSQLの設定
spring.datasource.url=jdbc:postgresql://localhost:5432/sslcertdb?serverTimezone=JST&characterEncoding=utf8
spring.datasource.username=postgres
spring.datasource.password=${SPRING_PROPERTY_PASSWORD}

# DBの初期化(alwaysでschema.sqlの実行、default:never)
spring.datasource.initialization-mode=never

# 次の記述がないと、Spring Boot 2.1.xでは動くが、Spring Boot 2.2.0では動かない
spring.mvc.hiddenmethod.filter.enabled=true

# Mybatisの設定
# 自動的にDB上のアンダースコア文字列とDtoのキャメルケース文字列をマッピング
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=30

# メールプロパティ
spring.mail.host=email-smtp.ap-northeast-1.amazonaws.com
spring.mail.port=465
spring.mail.username=${AWS_ACCESS_KEY_ID}
spring.mail.password=${AWS_SECRET_ACCESS_KEY}
spring.mail.protocol=smtps
spring.mail.smtps.auth=true
spring.mail.smtp.ssl.enable=true
mail.smtps.auth=true
mail.smtp.starttls.enable=true
mail.debug=true
mail.to=kaihatsu@jprs.co.jp
mail.from=no-reply@az.jprs.co.jp
mail.encoding=ISO-2022-JP

# log file
app.path=/home/jprs/asano/g3sslcert-mybatis-demo/log/
app.remainG3Prefix=remainG3sslcert.log.

# employeeName
app.employeeName=asano

# connection & read timeout
connection.timeout=10000

# delay time
delay.time=1000

# logging
logging.config=classpath:logback-spring.xml

# AWS
cloud.aws.credentials.accessKey=${AWS_ACCESS_KEY_ID}
cloud.aws.credentials.secretKey=${AWS_SECRET_ACCESS_KEY}
cloud.aws.region.auto=true
cloud.aws.stack.auto=true

